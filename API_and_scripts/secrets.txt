zomato API Key:
14f8b3cfa9aab42131b3602f14c659f4


Django -high level framework
its an MTV model template view design, because the controller is mainly built in and handled by django. 

Model - Data acess layer
Template - presentation error
View- business logic layer

Apps - a subset of a project.  

Best paired with a Python Virtual Environment.  Creates isolated Environments with their own directories. Separates you Django project instances

--------Steps---------
1) install Python
2) Install mySQL or another database management system
3) open command prompt and pip install virtualenvwrapper
4) cd into the directory you want to build your project
5) pip install django 
6) type >django-admin startproject [project name]
7) cd into project name folder
 --- manage.py is the cli tool ---
8) register admin and create super user [py manage.py createsuperuer --username=wiley --email=wiley@email.com]
9) run py manage.py startapp [appname]
10) go to settings.py and add your app to the list of installed Apps
11) go to project/urls.py and link your app. Import include module from django.conf.urls and use it to include your app urls
12) create a urls.py for the app.
13) import django.conf.urls and import path and your views
14) make a list of urlpatterns = [] that include the your views for a index method and give it a name with name=
15) go to the apps views file and make a function with the name that you gave referenced in urls.py
16) make that function return a render of a template
17) create a templates folder in your app level and create an html file to be rendered
18) restart your server to see your template
19) your template is where you will build vue.js logic
20) You can use {% block content %} and {% end block %} to create a base template
21) you can now make other html files that use (% extends 'app/index.html' %} with another block content in order to extend index.html
22) in models.py create your class models for your database
23) create fields and relationships, these can be used to display or organize data on your templates
24) migrate your models with py manage.py makemigrations
25) in your views you can create a context object with the data fields you need and return them in the render arguements



-----Django Rest Set Up:
1) In the projects folder make a folder named APIs
2) Install pipenv install djangorestframework==[version number]
3) python manage.py startapp apis 
4) add rest_framework and the apis app you just created to the INSTALLED_APPS list
5)