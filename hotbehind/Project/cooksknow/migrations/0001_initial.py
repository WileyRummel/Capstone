# Generated by Django 2.2.7 on 2020-01-18 00:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('options', models.TextField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=500)),
                ('website', models.URLField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('options', models.TextField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=1000)),
                ('rating', models.IntegerField(choices=[(1, 'Poor'), (2, 'Decent'), (3, 'Good'), (4, 'Great'), (5, 'Exceptional')])),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('restaurantrev', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cooksknow.Restaurant')),
            ],
        ),
        migrations.AddField(
            model_name='restaurant',
            name='reviewers',
            field=models.ManyToManyField(related_name='Reviews', through='cooksknow.Review', to=settings.AUTH_USER_MODEL),
        ),
    ]
